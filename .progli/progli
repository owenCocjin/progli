#!/bin/python3
## Author:	Owen Cocjin
## Version:	0.7
## Date:	26/05/19
## Description: Program to manage a custom list of installed programs

import sys, time, re
from menu import *
from importer import *
from common import *

'''--------------------+
|		VARIABLES		|
+---------------------'''
t=s=False
if 's' in flags:
	s=True
	flags.remove('s')
if 't' in flags:
	t=True
	flags.remove('t')

'''---------------------+
|		FUNCTIONS		|
+---------------------'''
def listCommands(all_programs, t=t, s=s):
##	print(f"s: {s}, t: {t}")
	#Sort list
	if s:
		all_programs=sorted(all_programs, key=lambda prog:prog.getName().lower())
	if t:
		#Print sorted
		for i in all_programs:
			print(i)
	else:
		for i in all_programs:
			print(i.getName())

	exit(0)

'''-----------------+
|		MAIN		|
+-----------------'''
def main():
##	print(flags)
##	print(assigned)
##	print(args)

	#Use regex to print Programs
	if 'h' in flags:
		usage()
	elif 'v' in flags:
		v()
	elif 'r' in assigned:
		try:
			#Create list of just Program names (to comapre regex to), and a list of
			#regex results
			barePrograms=[i.getName() for i in Program.all_programs]
			regexResults=[re.search(assigned['r'], i) for i in barePrograms]

			# Create a temp list of all matching commands & print it
			tempList=[p for p, r in zip(Program.all_programs, regexResults) if r]
			listCommands(tempList)
		except re.error:
			error("Cmd.args", "Check regex! (See python's 're' module for info)")

	#List all commands is no arg was given
	if len(args)+len(flags)==0:
		listCommands(Program.all_programs, t=True)

	#Print Program if only names were given
	#0<ord(args[0][0].upper())-65<25 <- Check if first char is a letters
	elif len(flags)==0:
		temp=[]
		for i in Program.all_programs:
			if i.getName() in args:
				temp.append(i)
		listCommands(temp, t=True)
		exit(0)

	#Parse command line arguments. all the following flags don't need args
	elif len(args)==0:
		[listCommands(Program.all_programs) for i in flags if i in ['l', "list"]]

	#Print an error if no name was given to a flag that needs an arg
	elif len(flags)>0 and len(args)==0:
		error("progli.main", "No program name given! Use \"progli -h\" for help")

	[add() for i in flags if i in ['a', "add"]]  #Get info and add it to program_list file

	[delete() for i in flags if i in ['d', "delete"]]  #Delete specified program

	[edit() for i in flags if i in ['e', "edit"]]  #Edit a specific program

	[usage() for i in flags if i in ['h', "help"]]

	usage()

if __name__=="__main__":
	main()

#To: This program,
#Luv u!
